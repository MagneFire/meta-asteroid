From 6f2c5bdaebb3fba5a2451725c8b66ed78e628def Mon Sep 17 00:00:00 2001
From: MagneFire <IDaNLContact@gmail.com>
Date: Fri, 16 Apr 2021 16:01:18 +0200
Subject: [PATCH] WIP: Dynamic launcher styles. TODO: Fixup dupplicate code
 Proper credit to relevant authors.

---
 applauncher-img/diskBackground.svg            |  14 ++
 applauncher-img/diskBackgroundPressed.svg     |  14 ++
 .../000-default-horizontal.qml                |  57 +++++--
 applauncher/001-three-icons-horizontal.qml    | 147 ++++++++++++++++
 applauncher/002-two-columns.qml               | 159 ++++++++++++++++++
 asteroid-launcher.pro                         |   9 +-
 qml/MainScreen.qml                            |  34 +++-
 resources-qml.qrc                             |   3 -
 8 files changed, 414 insertions(+), 23 deletions(-)
 create mode 100644 applauncher-img/diskBackground.svg
 create mode 100644 applauncher-img/diskBackgroundPressed.svg
 rename qml/applauncher/AppLauncher.qml => applauncher/000-default-horizontal.qml (73%)
 create mode 100644 applauncher/001-three-icons-horizontal.qml
 create mode 100644 applauncher/002-two-columns.qml

diff --git a/applauncher-img/diskBackground.svg b/applauncher-img/diskBackground.svg
new file mode 100644
index 0000000..768baf5
--- /dev/null
+++ b/applauncher-img/diskBackground.svg
@@ -0,0 +1,14 @@
+<svg width="100" height="100" viewBox="0 0 100 100"
+   xmlns="http://www.w3.org/2000/svg">
+
+  <defs>
+    <radialGradient id="shadow">
+      <stop offset="0%"  stop-color="#000000"/>
+      <stop offset="55%" stop-color="#000000"/>
+      <stop offset="75%" stop-color="transparent"/>
+    </radialGradient>
+  </defs>
+
+  <rect width="100" height="100" fill="url(#shadow)" />
+  <circle fill="#f4f4f4" cx="50" cy="50" r="35"/>
+</svg>
diff --git a/applauncher-img/diskBackgroundPressed.svg b/applauncher-img/diskBackgroundPressed.svg
new file mode 100644
index 0000000..1f50681
--- /dev/null
+++ b/applauncher-img/diskBackgroundPressed.svg
@@ -0,0 +1,14 @@
+<svg width="100" height="100" viewBox="0 0 100 100"
+   xmlns="http://www.w3.org/2000/svg">
+
+  <defs>
+    <radialGradient id="shadow">
+      <stop offset="0%"  stop-color="#000000"/>
+      <stop offset="55%" stop-color="#000000"/>
+      <stop offset="75%" stop-color="transparent"/>
+    </radialGradient>
+  </defs>
+
+  <rect width="100" height="100" fill="url(#shadow)" />
+  <circle fill="#cccccc" cx="50" cy="50" r="35"/>
+</svg>
diff --git a/qml/applauncher/AppLauncher.qml b/applauncher/000-default-horizontal.qml
similarity index 73%
rename from qml/applauncher/AppLauncher.qml
rename to applauncher/000-default-horizontal.qml
index 0e506b4..cccbb5c 100644
--- a/qml/applauncher/AppLauncher.qml
+++ b/applauncher/000-default-horizontal.qml
@@ -32,44 +32,75 @@
 
 import QtQuick 2.9
 import org.asteroid.controls 1.0
-import org.nemomobile.lipstick 0.1
+import "qrc:/qml/"
 
 ListView {
     id: appsListView
     orientation: ListView.Horizontal
     snapMode: ListView.SnapToItem
+    anchors.fill: parent
+    clip: true
 
-    property bool fakePressed:     false
-    property bool toTopAllowed:    false
-    property bool toBottomAllowed: false
-    property bool toLeftAllowed:   true
-    property bool toRightAllowed:  false
     property int currentPos: 0
 
     onCurrentPosChanged: {
-        toLeftAllowed = (currentPos!=launcherModel.itemCount-1)
-        toRightAllowed  = (currentPos!=0)
-
         rightIndicator.animate()
         leftIndicator.animate()
         topIndicator.animate()
         bottomIndicator.animate()
     }
 
-    model: LauncherModel { id: launcherModel }
+    model: launcherModel
 
-    delegate: LauncherItemDelegate {
+    delegate: MouseArea {
         id: launcherItem
         width: appsListView.width
         height: appsListView.width
-        iconName: model.object.iconId == "" ? "ios-help" : model.object.iconId
-        iconCaption: model.object.title.toUpperCase() + localeManager.changesObserver
         enabled: !appsListView.dragging
+
+        onClicked: model.object.launchApplication()
+
+        Image {
+            anchors.fill: parent
+            source: launcherItem.pressed | fakePressed ? "../applauncher-img/diskBackgroundPressed.svg" : "../applauncher-img/diskBackground.svg"
+            sourceSize.width: width
+            sourceSize.height: height
+        }
+
+        Icon {
+            id: icon
+            anchors.centerIn: parent
+            anchors.verticalCenterOffset: -Dims.h(3)
+            width: parent.width * 0.31
+            height: width
+            color: "#666666"
+            name: model.object.iconId == "" ? "ios-help" : model.object.iconId
+        }
+
+        Label {
+            id: iconText
+            anchors.top: icon.bottom
+            width: parent.width * 0.5
+            horizontalAlignment: Text.AlignHCenter
+            anchors.topMargin: Dims.h(4)
+            anchors.horizontalCenter: parent.horizontalCenter
+            color: "#666666"
+            font.pixelSize: ((appsListView.width > appsListView.height ? appsListView.height : appsListView.width) / Dims.l(100)) * Dims.l(5)
+            font.weight: Font.Medium
+            text: model.object.title.toUpperCase() + localeManager.changesObserver
+        }
     }
 
     Component.onCompleted: {
         launcherCenterColor = alb.centerColor(launcherModel.get(0).filePath);
         launcherOuterColor = alb.outerColor(launcherModel.get(0).filePath);
+
+        toLeftAllowed = Qt.binding(function() { return !atXEnd })
+        toRightAllowed = Qt.binding(function() { return !atXBeginning })
+
+        toTopAllowed = false
+        toBottomAllowed = true
+        forbidTop = false
     }
 
     onContentXChanged: {
diff --git a/applauncher/001-three-icons-horizontal.qml b/applauncher/001-three-icons-horizontal.qml
new file mode 100644
index 0000000..9608acd
--- /dev/null
+++ b/applauncher/001-three-icons-horizontal.qml
@@ -0,0 +1,147 @@
+/*
+ * Copyright (C) 2015 Florent Revest <revestflo@gmail.com>
+ *               2014 Aleksi Suomalainen <suomalainen.aleksi@gmail.com>
+ *               2012 Timur Krist√≥f <venemo@fedoraproject.org>
+ *               2011 Tom Swindell <t.swindell@rubyx.co.uk>
+ * All rights reserved.
+ *
+ * You may use this file under the terms of BSD license as follows:
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions are met:
+ *     * Redistributions of source code must retain the above copyright
+ *       notice, this list of conditions and the following disclaimer.
+ *     * Redistributions in binary form must reproduce the above copyright
+ *       notice, this list of conditions and the following disclaimer in the
+ *       documentation and/or other materials provided with the distribution.
+ *     * Neither the name of the author nor the
+ *       names of its contributors may be used to endorse or promote products
+ *       derived from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE FOR
+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+import QtQuick 2.9
+import org.asteroid.controls 1.0
+import "qrc:/qml/"
+
+ListView {
+    id: appsListView
+    orientation: ListView.Horizontal
+    snapMode: ListView.SnapToItem
+    anchors.fill: parent
+    clip: true
+
+    preferredHighlightBegin: width /2 - currentItem.width /2
+    preferredHighlightEnd: width /2 + currentItem.width /2
+    highlightRangeMode: ListView.StrictlyEnforceRange
+    contentY: -(width / 2 - (width / 4))
+
+    property int currentPos: 0
+
+    onCurrentPosChanged: {
+        rightIndicator.animate()
+        leftIndicator.animate()
+        topIndicator.animate()
+        bottomIndicator.animate()
+    }
+
+    model: launcherModel
+
+    delegate: MouseArea {
+        id: launcherItem
+        width: appsListView.width / 2
+        height: appsListView.width / 2
+        enabled: !appsListView.dragging
+
+        onClicked: model.object.launchApplication()
+
+        Image {
+            anchors.fill: parent
+            source: launcherItem.pressed | fakePressed ? "../applauncher-img/diskBackgroundPressed.svg" : "../applauncher-img/diskBackground.svg"
+            sourceSize.width: width
+            sourceSize.height: height
+        }
+
+        Icon {
+            id: icon
+            anchors.centerIn: parent
+            width: parent.width * 0.6
+            height: width
+            color: "#666666"
+            name: model.object.iconId == "" ? "ios-help" : model.object.iconId
+        }
+
+        Label {
+            id: iconText
+            anchors.top: icon.bottom
+            width: parent.width
+            horizontalAlignment: Text.AlignHCenter
+            anchors.topMargin: Dims.h(4)
+            anchors.horizontalCenter: parent.horizontalCenter
+            color: "#ffffff"
+            font.pixelSize: ((appsListView.width > appsListView.height ? appsListView.height : appsListView.width) / Dims.l(100)) * Dims.l(5)
+            font.weight: Font.Medium
+            text: model.object.title.toUpperCase() + localeManager.changesObserver
+        }
+    }
+
+    Component.onCompleted: {
+        launcherCenterColor = alb.centerColor(launcherModel.get(0).filePath);
+        launcherOuterColor = alb.outerColor(launcherModel.get(0).filePath);
+
+        toLeftAllowed = Qt.binding(function() { return !atXEnd })
+        toRightAllowed = Qt.binding(function() { return !atXBeginning })
+
+        toTopAllowed = false
+        toBottomAllowed = true
+        forbidTop = false
+    }
+
+    onContentXChanged: {
+        var lowerStop = Math.floor(contentX/appsListView.width)
+        var upperStop = lowerStop+1
+        var ratio = (contentX%appsListView.width)/appsListView.width
+
+        if(upperStop + 1 > launcherModel.itemCount || ratio == 0) {
+            launcherCenterColor = alb.centerColor(launcherModel.get(lowerStop).filePath);
+            launcherOuterColor = alb.outerColor(launcherModel.get(lowerStop).filePath);
+            return;
+        }
+
+        if(lowerStop < 0) {
+            launcherCenterColor = alb.centerColor(launcherModel.get(0).filePath);
+            launcherOuterColor = alb.outerColor(launcherModel.get(0).filePath);
+            return;
+        }
+
+        var upperCenterColor = alb.centerColor(launcherModel.get(upperStop).filePath);
+        var lowerCenterColor = alb.centerColor(launcherModel.get(lowerStop).filePath);
+
+        launcherCenterColor = Qt.rgba(
+                    upperCenterColor.r * ratio + lowerCenterColor.r * (1-ratio),
+                    upperCenterColor.g * ratio + lowerCenterColor.g * (1-ratio),
+                    upperCenterColor.b * ratio + lowerCenterColor.b * (1-ratio)
+                );
+
+        var upperOuterColor = alb.outerColor(launcherModel.get(upperStop).filePath);
+        var lowerOuterColor = alb.outerColor(launcherModel.get(lowerStop).filePath);
+
+        launcherOuterColor = Qt.rgba(
+                    upperOuterColor.r * ratio + lowerOuterColor.r * (1-ratio),
+                    upperOuterColor.g * ratio + lowerOuterColor.g * (1-ratio),
+                    upperOuterColor.b * ratio + lowerOuterColor.b * (1-ratio)
+                );
+
+        currentPos = Math.round(lowerStop+ratio)
+    }
+}
diff --git a/applauncher/002-two-columns.qml b/applauncher/002-two-columns.qml
new file mode 100644
index 0000000..303bbba
--- /dev/null
+++ b/applauncher/002-two-columns.qml
@@ -0,0 +1,159 @@
+/*
+ * Copyright (C) 2015 Florent Revest <revestflo@gmail.com>
+ *               2014 Aleksi Suomalainen <suomalainen.aleksi@gmail.com>
+ *               2012 Timur Krist√≥f <venemo@fedoraproject.org>
+ *               2011 Tom Swindell <t.swindell@rubyx.co.uk>
+ * All rights reserved.
+ *
+ * You may use this file under the terms of BSD license as follows:
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions are met:
+ *     * Redistributions of source code must retain the above copyright
+ *       notice, this list of conditions and the following disclaimer.
+ *     * Redistributions in binary form must reproduce the above copyright
+ *       notice, this list of conditions and the following disclaimer in the
+ *       documentation and/or other materials provided with the distribution.
+ *     * Neither the name of the author nor the
+ *       names of its contributors may be used to endorse or promote products
+ *       derived from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE FOR
+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+import QtQuick 2.9
+import org.asteroid.controls 1.0
+import "qrc:/qml/"
+
+GridView {
+    id: appsView
+    flow: GridView.FlowLeftToRight
+    snapMode: GridView.SnapToRow
+    anchors.fill: parent
+    clip: true
+    cellHeight: appsView.height/2
+    cellWidth: appsView.width/2
+
+    preferredHighlightBegin: width /2 - currentItem.width /2
+    preferredHighlightEnd: width /2 + currentItem.width /2
+    highlightRangeMode: ListView.StrictlyEnforceRange
+    contentY: -(width / 2 - (width / 4))
+
+    property int currentPos: 0
+    onAtYBeginningChanged: {
+        if ((grid.currentHorizontalPos == 0) && (grid.currentVerticalPos == 1)) {
+            forbidTop = !atYBeginning;
+            grid.changeAllowedDirections()
+        }
+    }
+
+    onCurrentPosChanged: {
+        rightIndicator.animate()
+        leftIndicator.animate()
+        topIndicator.animate()
+        bottomIndicator.animate()
+    }
+
+    model: launcherModel
+
+    delegate: MouseArea {
+        id: launcherItem
+        width: appsView.width / 2
+        height: appsView.width / 2
+        enabled: !appsView.dragging
+
+        onClicked: model.object.launchApplication()
+
+        Image {
+            anchors.fill: parent
+            source: launcherItem.pressed | fakePressed ? "../applauncher-img/diskBackgroundPressed.svg" : "../applauncher-img/diskBackground.svg"
+            sourceSize.width: width
+            sourceSize.height: height
+            y: -Dims.h(1)
+        }
+
+        Icon {
+            id: icon
+            anchors.centerIn: parent
+            anchors.verticalCenterOffset: -Dims.h(1)
+            width: parent.width * 0.6
+            height: width
+            color: "#666666"
+            name: model.object.iconId == "" ? "ios-help" : model.object.iconId
+        }
+
+        Label {
+            id: iconText
+            anchors.top: icon.bottom
+            width: parent.width
+            horizontalAlignment: Text.AlignHCenter
+            anchors.topMargin: Dims.h(3)
+            anchors.horizontalCenter: parent.horizontalCenter
+            color: "#ffffff"
+            font.pixelSize: ((appsView.width > appsView.height ? appsView.height : appsView.width) / Dims.l(100)) * Dims.l(5)
+            font.weight: Font.Medium
+            text: model.object.title.toUpperCase() + localeManager.changesObserver
+        }
+    }
+
+    Component.onCompleted: {
+        launcherCenterColor = alb.centerColor(launcherModel.get(0).filePath);
+        launcherOuterColor = alb.outerColor(launcherModel.get(0).filePath);
+
+        toLeftAllowed = false
+        toRightAllowed = false
+        //toTopAllowed =  Qt.binding(function() { return !atXEnd })
+        //toBottomAllowed = Qt.binding(function() { return !atXEnd })
+        //toLeftAllowed = Qt.binding(function() { return !atXEnd })
+        //toRightAllowed = Qt.binding(function() { return !atXBeginning })
+        //forbidTop = Qt.binding(function() { return !atYBeginning })
+        toTopAllowed = Qt.binding(function() { return !atYEnd })
+    }
+
+    onContentYChanged: {
+        var lowerStop = Math.floor(contentY/appsView.height)
+        var upperStop = lowerStop+1
+        var ratio = (contentY%appsView.height)/appsView.height
+
+        if(upperStop + 1 > launcherModel.itemCount || ratio == 0) {
+            launcherCenterColor = alb.centerColor(launcherModel.get(lowerStop).filePath);
+            launcherOuterColor = alb.outerColor(launcherModel.get(lowerStop).filePath);
+            return;
+        }
+
+        if(lowerStop < 0) {
+            launcherCenterColor = alb.centerColor(launcherModel.get(0).filePath);
+            launcherOuterColor = alb.outerColor(launcherModel.get(0).filePath);
+            return;
+        }
+
+        var upperCenterColor = alb.centerColor(launcherModel.get(upperStop).filePath);
+        var lowerCenterColor = alb.centerColor(launcherModel.get(lowerStop).filePath);
+
+        launcherCenterColor = Qt.rgba(
+                    upperCenterColor.r * ratio + lowerCenterColor.r * (1-ratio),
+                    upperCenterColor.g * ratio + lowerCenterColor.g * (1-ratio),
+                    upperCenterColor.b * ratio + lowerCenterColor.b * (1-ratio)
+                );
+
+        var upperOuterColor = alb.outerColor(launcherModel.get(upperStop).filePath);
+        var lowerOuterColor = alb.outerColor(launcherModel.get(lowerStop).filePath);
+
+        launcherOuterColor = Qt.rgba(
+                    upperOuterColor.r * ratio + lowerOuterColor.r * (1-ratio),
+                    upperOuterColor.g * ratio + lowerOuterColor.g * (1-ratio),
+                    upperOuterColor.b * ratio + lowerOuterColor.b * (1-ratio)
+                );
+
+        currentPos = Math.round(lowerStop+ratio)
+    }
+}
diff --git a/asteroid-launcher.pro b/asteroid-launcher.pro
index 522b38f..f7cb8aa 100644
--- a/asteroid-launcher.pro
+++ b/asteroid-launcher.pro
@@ -26,7 +26,6 @@ RESOURCES += \
 
 OTHER_FILES += qml/*.qml \
     qml/MainScreen.qml \
-    qml/applauncher/AppLauncher.qml \
     qml/today/Today.qml \
     qml/appswitcher/LauncherItemDelegate.qml \
     qml/compositor/compositor.qml \
@@ -44,10 +43,16 @@ TRANSLATIONS = $$files(i18n/$$TARGET.*.ts)
 
 target.path = /usr/bin
 
+applauncher.path = /usr/share/asteroid-launcher/applauncher
+applauncher.files =  applauncher/*
+
+applauncher-img.path = /usr/share/asteroid-launcher/applauncher-img
+applauncher-img.files =  applauncher-img/*
+
 watchfaces.path = /usr/share/asteroid-launcher/watchfaces
 watchfaces.files =  watchfaces/*
 
 watchfaces-img.path = /usr/share/asteroid-launcher/watchfaces-img
 watchfaces-img.files =  watchfaces-img/*
 
-INSTALLS = target watchfaces watchfaces-img
+INSTALLS = target applauncher applauncher-img watchfaces watchfaces-img
diff --git a/qml/MainScreen.qml b/qml/MainScreen.qml
index f0199e4..d9999e0 100644
--- a/qml/MainScreen.qml
+++ b/qml/MainScreen.qml
@@ -182,12 +182,21 @@ Item {
         onValueChanged: burnInProtectionManager.resetOffsets()
     }
 
+    ConfigurationValue {
+        id: appLauncherSource
+        key: "/desktop/asteroid/applauncher"
+        defaultValue: "file:///usr/share/asteroid-launcher/applauncher/000-default-horizontal.qml"
+    }
+
     Connections {
         target: localeManager
         function onChangesObserverChanged() {
             var bkp = watchFaceSource.value
             watchFaceSource.value = ""
             watchFaceSource.value = bkp
+            var bkp1 = appLauncherSource.value
+            appLauncherSource.value = ""
+            appLauncherSource.value = bkp1
         }
     }
 
@@ -195,7 +204,22 @@ Item {
     Component { id: leftPanel;   NotificationsPanel { panelsGrid: grid } }
     Component { id: centerPanel; Loader             { source: watchFaceSource.value } }
     Component { id: rightPanel;  Today              { } }
-    Component { id: bottomPanel; AppLauncher        { } }
+    Component {
+        id: bottomPanel
+        Loader {
+            property bool fakePressed:     false
+            property bool toTopAllowed:    false
+            property bool toBottomAllowed: false
+            property bool toLeftAllowed:   false
+            property bool toRightAllowed:  false
+            property bool forbidTop: false
+            property bool forbidBottom: false
+            property bool forbidLeft: false
+            property bool forbidRight: false
+            LauncherModel { id: launcherModel }
+            source: appLauncherSource.value
+        }
+    }
 
     PanelsGrid {
         id: grid 
@@ -207,10 +231,10 @@ Item {
             var np = addPanel(-1, 0, leftPanel)
             addPanel(0, -1, topPanel)
 
-            rightIndicator.visible  = Qt.binding(function() { return ((grid.toLeftAllowed   || (grid.currentVerticalPos == 1 && al.toLeftAllowed )) && !displayAmbient)})
-            leftIndicator.visible   = Qt.binding(function() { return ((grid.toRightAllowed  || (grid.currentVerticalPos == 1 && al.toRightAllowed)) && (!displayAmbient || !np.modelEmpty))})
-            topIndicator.visible    = Qt.binding(function() { return (grid.toBottomAllowed && !displayAmbient)   })
-            bottomIndicator.visible = Qt.binding(function() { return (grid.toTopAllowed  && !displayAmbient)})
+            rightIndicator.visible  = Qt.binding(function() { return ((grid.toLeftAllowed   || (grid.currentVerticalPos == 1 && al.toLeftAllowed ))   && !displayAmbient)})
+            leftIndicator.visible   = Qt.binding(function() { return ((grid.toRightAllowed  || (grid.currentVerticalPos == 1 && al.toRightAllowed))   && (!displayAmbient || !np.modelEmpty))})
+            topIndicator.visible    = Qt.binding(function() { return ((grid.toBottomAllowed || (grid.currentVerticalPos == 1 && al.toBottomAllowed )) && !displayAmbient)})
+            bottomIndicator.visible = Qt.binding(function() { return ((grid.toTopAllowed    || (grid.currentVerticalPos == 1 && al.toTopAllowed ))    && !displayAmbient)})
 
             leftIndicator.keepExpanded = Qt.binding(function() { return !np.modelEmpty && grid.currentHorizontalPos == 0 && grid.currentVerticalPos == 0 })
 
diff --git a/resources-qml.qrc b/resources-qml.qrc
index a046c1f..907cde8 100644
--- a/resources-qml.qrc
+++ b/resources-qml.qrc
@@ -1,12 +1,9 @@
 <RCC>
     <qresource prefix="/">
         <file>images/shutdown-logo.png</file>
-        <file>images/diskBackground.svg</file>
-        <file>images/diskBackgroundPressed.svg</file>
     </qresource>
     <qresource prefix="/qml/">
         <file alias="MainScreen.qml">qml/MainScreen.qml</file>
-        <file alias="AppLauncher.qml">qml/applauncher/AppLauncher.qml</file>
         <file alias="LauncherItemDelegate.qml">qml/applauncher/LauncherItemDelegate.qml</file>
         <file alias="Today.qml">qml/today/Today.qml</file>
         <file alias="compositor.qml">qml/compositor/compositor.qml</file>
-- 
2.31.1

